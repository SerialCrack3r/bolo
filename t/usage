#!/usr/bin/env bash

bail() {
  echo >&2 $*
  echo FAIL
  exit 1
}

ROOT=$(mktemp -d --tmpdir bolo.test.XXXXXXXX)
trap "rm -rf ${ROOT:?nothing to remove}" EXIT TERM INT

for bin in send_bolo bolo bcache \
           bolo2rrd bolo2meta bolo2log; do
	if [[ -x ./${bin} ]]; then
		./${bin} -V 2>&1 | grep -iq copyright || bail "${bin} -V did not contain Copyright notice"
		./${bin} -h 2>&1 | grep -iq ${bin}    || bail "${bin} -h did not identify as '${bin}'"
		./${bin} -? 2>&1 | grep -iq usage:    || bail "${bin} -? did not show Usage example"
		./${bin} -h 2>&1 | grep -iq options:  || bail "${bin} -h did not show Options section"
		./${bin} -7 2>&1 | grep -iq invalid   || bail "${bin} -7 didn't complain about bad flag"
	fi
done

./bolospy 2>&1 | grep -iq usage: || bail "bolospy (no args) did not show Usage example"
./bolospy $ROOT/missing $ROOT/missing 2>&1 | grep -iq 'no such file' || bail "bolospy didn't complain about missing file"
touch $ROOT/present
echo "CORRUPT" > $ROOT/corrupt
./bolospy $ROOT/present $ROOT/corrupt 2>&1 | grep -iq 'corrupt savefile' \
	|| bail "bolospay didn't complain about corrupt savefile"

./bolo -Fc $ROOT/bolo.conf 2>&1 | grep -iq "failed to read configuration" \
	|| bail "bolo did not bail when --config was unreadable (ENOENT)"

exit 0
