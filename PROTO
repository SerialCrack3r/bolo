
                       ########   #######  ##        #######
                       ##     ## ##     ## ##       ##     ##
                       ##     ## ##     ## ##       ##     ##
                       ########  ##     ## ##       ##     ##
                       ##     ## ##     ## ##       ##     ##
                       ##     ## ##     ## ##       ##     ##
                       ########   #######  ########  #######

                       --------------------------------------
                       a simple, performant monitoring system
                       --------------------------------------

   Architecture:

   ------------------.                                         .------------------
                     |           .-----------------.           |
        LISTENER     | [UPDATE]  |    db manager   |  [STATE]  |    CONTROLLER
      tcp://*:2999   |---------->|   inproc://db   |<----------|   tcp://*:2998
                     |           '-----------------'  [DUMP]   |
   ------------------'                    ^                    '------------------
                                          |
                                          |  [CHECKFRESH]
                                          |  [SAVESTATE]
                                          |
                                 .-----------------.
                                 |    scheduler    |
                                 '-----------------'

   Threads:
     1. listener   - Handles inbound NLMA/NSCA submission
     2. controller - Handles inbound control messages, like STAT/DUMP
     3. db manager - Manages the internal database
     4. scheduler  - Issues timed commands to the db manager


   PDUs:

     ---------------------------------------------------------------------------

     UPDATE                OK                ; update the named state, with a
     <TIMESTAMP>                             ; new status code and summary
     <STATE-NAME>                            ; message, in response to data
     <NUMERIC-CODE>                          ; submitted by monitored systems.
     <SUMMARY MSG>

     ---------------------------------------------------------------------------

     STATE                 STATE             ; retrieve a single stat, by name
     <STATE-NAME>          <STATE-NAME>      ; from the current database
                           <LAST-SEEN>
                           <FRESH>           ; yes or no
                           <STATUS>          ; OK, WARNING, CRITICAL or UNKNOWN
                           <SUMMARY MSG>

     ---------------------------------------------------------------------------

     DUMP                  DUMP              ; dumps all stats in a YAML file,
     <KEY>                 <FILE>            ; <KEY> is a randomized string of
                                             ; up to 16 characters (truncated)

     ---------------------------------------------------------------------------

     CHECKFRESH            OK                ; prompts the db manager to assess
                                             ; freshness of all tracked states

     ---------------------------------------------------------------------------

     SAVESTATE             OK                ; prompts the db manager to write
                                             ; current state to a binary file
                                             ; that it can re-read on next boot

     ---------------------------------------------------------------------------

     *                     ERROR             ; error reply, with friendly error
                           <MESSAGE>         ; message text

     ---------------------------------------------------------------------------

  Dump YAML format:

    ---
    name1:
      status:    OK
      message:   Everything is awesome
      last_seen: 1234567890
      fresh:     yes
    name2:
      status:    WARNING
      message:   No results from external source in over 15 minutes
      last_seen: 1234567890
      fresh:     no
    name3:
      # etc.

  Save (binary) file format:

    [magic:u32]      "BOLO"
    [version:u16]    (ASCII)
    [flags:u16]
    [timestamp:i64]
    [count:u32]

    [len:u16]        \
    [lastseen:i64]    \
    [status:u8]        \___ one record
    [stale:u8]         /    per state
    [name:*]\0        /
    [summary:*]\0    /

    \0\0             <----- NUL trailer, EOF
                            (or, an empty 'len')

# vim:et
